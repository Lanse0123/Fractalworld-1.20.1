package lanse.fractalworld;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonObject;
import lanse.fractalworld.Automata.AutomataControl;
import lanse.fractalworld.Automata.AutomataPresets;
import lanse.fractalworld.ChunkRandomizer.ChunkRandomizer;
import lanse.fractalworld.FractalCalculator.FractalGenerator;
import lanse.fractalworld.FractalCalculator.FractalPresets;
import lanse.fractalworld.FractalCalculator.WorldPainter;
import lanse.fractalworld.WorldSorter.SorterPresets;
import lanse.fractalworld.WorldSorter.SortingGenerator;
import lanse.fractalworld.WorldSymmetrifier.Symmetrifier;
import net.minecraft.server.MinecraftServer;

import java.io.*;
import java.nio.file.Files;
import java.nio.file.Path;

public class DataSaver {

    private static final String DATA_NAME = "fractalworld_config";
    public static boolean changed = false;

    public static DataSaver getOrCreate(MinecraftServer server) {

        Path configFolder = server.getRunDirectory().toPath().resolve("config/fractalworld");
        Path configFile = configFolder.resolve("config.json");

        // Check if the JSON config file exists
        if (!Files.exists(configFile)) {
            try {
                Files.createDirectories(configFolder);
            } catch (IOException ignored) {}
        }
        return new DataSaver();
    }

    //Save Data to JSON
    public void saveToJson(Path configFolder) {
        Path configFile = configFolder.resolve("config.json");

        try {
            //TODO - I AM SURE THIS COULD BE BETTER

            //To overwrite data, delete the current file.
            if (Files.exists(configFile)) {
                Files.delete(configFile);
            }

            Files.createFile(configFile);

            try (Writer writer = Files.newBufferedWriter(configFile)) {
                Gson gson = new GsonBuilder().setPrettyPrinting().create();
                JsonObject jsonConfig = toJson();
                gson.toJson(jsonConfig, writer);
            }
        } catch (IOException ignored) {}
    }

    //Save Data to JSON
    public JsonObject toJson() {
        JsonObject json = new JsonObject();

        json.addProperty("maxRender", ChunkGenerationListener.MAX_RENDER_DIST);
        json.addProperty("maxColumnsPerTick", FractalWorld.maxColumnsPerTick);
        json.addProperty("permaSave", FractalWorld.permaSave);
        json.addProperty("refreshRate", FractalWorld.refreshRate);
        json.addProperty("autoRefreshModeIsOn", FractalWorld.autoRefreshModeIsOn);

        json.addProperty("maxIter", FractalGenerator.MAX_ITER);
        json.addProperty("minIter", FractalGenerator.MIN_ITER);
        json.addProperty("initialHeightOffset", FractalGenerator.INITIAL_HEIGHT_OFFSET);
        json.addProperty("scale", FractalGenerator.scale);
        json.addProperty("playerScale", FractalGenerator.playerScale);
        json.addProperty("invertedHeight", FractalGenerator.INVERTED_HEIGHT);
        json.addProperty("heightGeneratorEnabled", FractalGenerator.heightGeneratorEnabled);
        json.addProperty("xOffset", FractalGenerator.xOffset);
        json.addProperty("zOffset", FractalGenerator.zOffset);

        json.addProperty("fractalPreset", FractalPresets.fractalPreset);
        json.addProperty("seedReal", FractalPresets.seedReal);
        json.addProperty("seedImaginary", FractalPresets.seedImaginary);
        json.addProperty("power3D", FractalPresets.POWER3D);

        json.addProperty("colorPalette", WorldPainter.colorPallet);
        json.addProperty("worldPainterEnabled", WorldPainter.worldPainterEnabled);
        json.addProperty("worldPainterFullHeightEnabled", WorldPainter.worldPainterFullHeightEnabled);

        json.addProperty("isChunkRandomizerEnabled", ChunkRandomizer.isChunkRandomizerEnabled);

        json.addProperty("automataRule", AutomataPresets.rule);
        json.addProperty("automataIsEnabled", AutomataControl.automataIsEnabled);
        json.addProperty("automataPreset", AutomataControl.automataPreset);

        json.addProperty("sorterPreset", SorterPresets.sorterPreset);
        json.addProperty("worldSorterIsEnabled", SortingGenerator.WorldSorterIsEnabled);

        json.addProperty("symmetrifierEnabled", Symmetrifier.symmetrifierEnabled);
        json.addProperty("verticalMirrorWorldEnabled", Symmetrifier.verticalMirrorWorldEnabled);
        json.addProperty("circleGen", Symmetrifier.circleGen);
        json.addProperty("symmetrifier", Symmetrifier.symmetrifier);
        json.addProperty("numberOfCorners", Symmetrifier.numberOfCorners);

        changed = false;
        return json;
    }

    //Load data from JSON
    public static void fromJson(JsonObject json) {
        ChunkGenerationListener.MAX_RENDER_DIST = json.get("maxRender").getAsInt();

        FractalWorld.maxColumnsPerTick = json.get("maxColumnsPerTick").getAsInt();
        FractalWorld.permaSave = json.get("permaSave").getAsBoolean();
        FractalWorld.refreshRate = json.get("refreshRate").getAsInt();
        FractalWorld.autoRefreshModeIsOn = json.get("autoRefreshModeIsOn").getAsBoolean();

        FractalGenerator.MAX_ITER = json.get("maxIter").getAsInt();
        FractalGenerator.MIN_ITER = json.get("minIter").getAsInt();
        FractalGenerator.INITIAL_HEIGHT_OFFSET = json.get("initialHeightOffset").getAsInt();
        FractalGenerator.scale = json.get("scale").getAsDouble();
        FractalGenerator.playerScale = json.get("playerScale").getAsInt();
        FractalGenerator.INVERTED_HEIGHT = json.get("invertedHeight").getAsBoolean();
        FractalGenerator.heightGeneratorEnabled = json.get("heightGeneratorEnabled").getAsBoolean();
        FractalGenerator.xOffset = json.get("xOffset").getAsDouble();
        FractalGenerator.zOffset = json.get("zOffset").getAsDouble();

        FractalPresets.fractalPreset = json.get("fractalPreset").getAsString();
        FractalPresets.seedReal = json.get("seedReal").getAsDouble();
        FractalPresets.seedImaginary = json.get("seedImaginary").getAsDouble();
        FractalPresets.POWER3D = json.get("power3D").getAsInt();

        WorldPainter.colorPallet = json.get("colorPalette").getAsString();
        WorldPainter.worldPainterEnabled = json.get("worldPainterEnabled").getAsBoolean();
        WorldPainter.worldPainterFullHeightEnabled = json.get("worldPainterFullHeightEnabled").getAsBoolean();

        ChunkRandomizer.isChunkRandomizerEnabled = json.get("isChunkRandomizerEnabled").getAsBoolean();

        AutomataPresets.rule = json.get("automataRule").getAsInt();
        AutomataControl.automataIsEnabled = json.get("automataIsEnabled").getAsBoolean();
        AutomataControl.automataPreset = json.get("automataPreset").getAsString();

        SorterPresets.sorterPreset = json.get("sorterPreset").getAsString();
        SortingGenerator.WorldSorterIsEnabled = json.get("worldSorterIsEnabled").getAsBoolean();

        Symmetrifier.symmetrifierEnabled = json.get("symmetrifierEnabled").getAsBoolean();
        Symmetrifier.verticalMirrorWorldEnabled = json.get("verticalMirrorWorldEnabled").getAsBoolean();
        Symmetrifier.circleGen = json.get("circleGen").getAsBoolean();
        Symmetrifier.symmetrifier = json.get("symmetrifier").getAsBoolean();
        Symmetrifier.numberOfCorners = json.get("numberOfCorners").getAsInt();
    }

    public static void returnToDefaultValues() {
        FractalWorld.isModEnabled = false;

        ChunkGenerationListener.MAX_RENDER_DIST = 8;

        FractalWorld.maxColumnsPerTick = 100;
        FractalWorld.permaSave = false;
        FractalWorld.refreshRate = 10000;
        FractalWorld.autoRefreshModeIsOn = false;

        FractalGenerator.MAX_ITER = 50;
        FractalGenerator.MIN_ITER = 5;
        FractalGenerator.INITIAL_HEIGHT_OFFSET = 63;
        FractalGenerator.scale = 0.5;
        FractalGenerator.playerScale = 1;
        FractalGenerator.INVERTED_HEIGHT = false;
        FractalGenerator.heightGeneratorEnabled = true;
        FractalGenerator.xOffset = 0;
        FractalGenerator.zOffset = 0;

        FractalPresets.fractalPreset = "2d_mandelbrot_fractal";
        FractalPresets.seedReal = -0.7;
        FractalPresets.seedImaginary = 0.27015;
        FractalPresets.POWER3D = 8;

        WorldPainter.colorPallet = "concrete";
        WorldPainter.worldPainterEnabled = false;
        WorldPainter.worldPainterFullHeightEnabled = false;

        ChunkRandomizer.isChunkRandomizerEnabled = false;

        AutomataPresets.rule = 34;
        AutomataControl.automataIsEnabled = false;
        AutomataControl.automataPreset = "wolfram";

        SorterPresets.sorterPreset = "player_chunk_insertion_sort";
        SortingGenerator.WorldSorterIsEnabled = false;

        Symmetrifier.symmetrifierEnabled = false;
        Symmetrifier.verticalMirrorWorldEnabled = false;
        Symmetrifier.circleGen = false;
        Symmetrifier.symmetrifier = true;
        Symmetrifier.numberOfCorners = 4;
    }
}
